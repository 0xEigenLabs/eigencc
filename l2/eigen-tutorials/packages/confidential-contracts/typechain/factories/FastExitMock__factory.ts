/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FastExitMock, FastExitMockInterface } from "../FastExitMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exitNum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "liquidityProof",
        type: "bytes",
      },
    ],
    name: "requestLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610245806100246000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806369fe0e2d1461003b578063effc168b14610069575b600080fd5b6100676004803603602081101561005157600080fd5b8101908080359060200190929190505050610136565b005b610134600480360360a081101561007f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156100f057600080fd5b82018360208201111561010257600080fd5b8035906020019184600183028401116401000000008311171561012457600080fd5b9091929391929390505050610140565b005b8060008190555050565b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8760005487036040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050506040513d60208110156101f557600080fd5b81019080805190602001909291905050505050505050505056fea2646970667358221220a5eebc3a11814ce7064f6d5b7be7e8abebaffc2a66cf6567f059d8b2edd056d764736f6c634300060b0033";

export class FastExitMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastExitMock> {
    return super.deploy(overrides || {}) as Promise<FastExitMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FastExitMock {
    return super.attach(address) as FastExitMock;
  }
  connect(signer: Signer): FastExitMock__factory {
    return super.connect(signer) as FastExitMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastExitMockInterface {
    return new utils.Interface(_abi) as FastExitMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastExitMock {
    return new Contract(address, _abi, signerOrProvider) as FastExitMock;
  }
}
