[package]
name = "getrandom"
version = "0.1.14"
edition = "2018"
authors = ["The Rand Project Developers"]
license = "MIT OR Apache-2.0"
description = "A small cross-platform library for retrieving random data from system source"
documentation = "https://docs.rs/getrandom"
repository = "https://github.com/rust-random/getrandom"
categories = ["os", "no-std"]
exclude = ["utils/*", ".*", "appveyor.yml", "/sgx/*"]

[badges]
travis-ci = { repository = "rust-random/getrandom" }
appveyor = { repository = "rust-random/getrandom" }

[dependencies]
log = { git = "https://github.com/mesalock-linux/log-sgx", optional = true, default-features = false }
cfg-if = "0.1.2"

[target.'cfg(not(all(target_env = "sgx", target_vendor = "mesalock")))'.dependencies]
sgx_tstd = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_trts = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_libc = { rev = "v1.1.3", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }

# When built as part of libstd
#compiler_builtins = { version = "0.1", optional = true }
#core = { version = "1.0", optional = true, package = "rustc-std-workspace-core" }

[target.'cfg(unix)'.dependencies]
#libc = { version = "0.2.64", default-features = false }

[target.'cfg(target_os = "wasi")'.dependencies]
#wasi = "0.9"

[target.wasm32-unknown-unknown.dependencies]
#wasm-bindgen = { version = "0.2.29", optional = true }
#stdweb = { version = "0.4.18", optional = true }

[target.wasm32-unknown-unknown.dev-dependencies]
#wasm-bindgen-test = "0.2"

[features]
default = ["std", "mesalock_sgx"]
std = []
# Enables dummy implementation for unsupported targets
dummy = []
# Unstable feature to support being a libstd dependency
#rustc-dep-of-std = ["compiler_builtins", "core"]
# Unstable feature for testing
#test-in-browser = ["wasm-bindgen"]
mesalock_sgx = ["sgx_tstd", "sgx_trts", "sgx_libc"]
