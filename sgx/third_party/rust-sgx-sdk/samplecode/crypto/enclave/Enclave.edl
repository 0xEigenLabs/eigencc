// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

enclave {
    from "sgx_tstd.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_backtrace.edl" import *;
    from "sgx_tstdc.edl" import *;

    trusted {
        /* define ECALLs here. */

        public sgx_status_t calc_sha256([in, size=len] const uint8_t* input_str,
                                        size_t len,
                                        [out] uint8_t hash[32]);

        public sgx_status_t aes_gcm_128_encrypt([in] uint8_t key[16],
                                                [in, size=len] const uint8_t* plaintext,
                                                size_t len,
                                                [in] uint8_t iv[12],
                                                [out, size=len] uint8_t* ciphertext,
                                                [out] uint8_t mac[16]);

        public sgx_status_t aes_gcm_128_decrypt([in] uint8_t key[16],
                                                [in, size=len] const uint8_t* ciphertext,
                                                size_t len,
                                                [in] uint8_t iv[12],
                                                [in] uint8_t mac[16],
                                                [out, size=len] uint8_t* plaintext);

        public sgx_status_t aes_cmac([in, size=len] const uint8_t* text,
                                     size_t len,
                                     [in] uint8_t key[16],
                                     [out] uint8_t cmac[16]);

        public sgx_status_t rsa_key([in, size=len] const uint8_t* text, size_t len);

    };

    untrusted {

    };
};
